!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
AB_BASE	mbr_serialport.h	70;"	d
Accept	mbr_common.cpp	/^CSocket* CSocket::Accept(void)$/;"	f	class:CSocket
CMsgQ	mbr_common.cpp	/^CMsgQ::CMsgQ()$/;"	f	class:CMsgQ
CMsgQ	mbr_common.cpp	/^CMsgQ::CMsgQ(int iMsgQHandle)$/;"	f	class:CMsgQ
CMsgQ	mbr_common.h	/^class CMsgQ$/;"	c
CSocket	mbr_common.cpp	/^CSocket::CSocket()$/;"	f	class:CSocket
CSocket	mbr_common.cpp	/^CSocket::CSocket(int iSocketFD)$/;"	f	class:CSocket
CSocket	mbr_common.cpp	/^CSocket::CSocket(int iSocketType,$/;"	f	class:CSocket
CSocket	mbr_common.h	/^class CSocket$/;"	c
Cmd_acCommand	mbr_common.h	401;"	d
Cmd_iDASID	mbr_common.h	398;"	d
DeviceLookUp	mbr_serialport.h	/^typedef struct DeviceLookUp$/;"	s
FL	mbr_serialport.h	68;"	d
Flush	mbr_common.cpp	/^int CMsgQ::Flush(void)$/;"	f	class:CMsgQ
IL	mbr_serialport.h	67;"	d
MBR_8255CW_1	mbr_serialport.h	40;"	d
MBR_8255CW_2	mbr_serialport.h	44;"	d
MBR_8255INPORT_A1	mbr_serialport.h	49;"	d
MBR_8255INPORT_A2	mbr_serialport.h	52;"	d
MBR_8255INPORT_B1	mbr_serialport.h	50;"	d
MBR_8255INPORT_B2	mbr_serialport.h	53;"	d
MBR_8255INPORT_C1	mbr_serialport.h	51;"	d
MBR_8255INPORT_C2	mbr_serialport.h	54;"	d
MBR_8255MODE_AIBICI	mbr_serialport.h	37;"	d
MBR_8255MODE_AIBICO	mbr_serialport.h	33;"	d
MBR_8255MODE_AIBOCI	mbr_serialport.h	35;"	d
MBR_8255MODE_AIBOCO	mbr_serialport.h	31;"	d
MBR_8255MODE_ALLOUT	mbr_serialport.h	29;"	d
MBR_8255MODE_AOBICI	mbr_serialport.h	36;"	d
MBR_8255MODE_AOBICO	mbr_serialport.h	32;"	d
MBR_8255MODE_AOBOCI	mbr_serialport.h	34;"	d
MBR_8255PORT_A1	mbr_serialport.h	41;"	d
MBR_8255PORT_A2	mbr_serialport.h	45;"	d
MBR_8255PORT_B1	mbr_serialport.h	42;"	d
MBR_8255PORT_B2	mbr_serialport.h	46;"	d
MBR_8255PORT_C1	mbr_serialport.h	43;"	d
MBR_8255PORT_C2	mbr_serialport.h	47;"	d
MBR_ACQARG_DEVFLAG	mbr_common.h	328;"	d
MBR_ACQARG_DURFLAG	mbr_common.h	327;"	d
MBR_ACQARG_MCCFGFLAG	mbr_common.h	324;"	d
MBR_ACQARG_MODEFLAG	mbr_common.h	325;"	d
MBR_ACQARG_OFFSETFLAG	mbr_common.h	326;"	d
MBR_ACQMODE_CHECK	mbr_common.h	193;"	d
MBR_ACQMODE_OBS	mbr_common.h	190;"	d
MBR_ACQMODE_SNIFF	mbr_common.h	191;"	d
MBR_ACQMODE_SNIFFACQ	mbr_common.h	192;"	d
MBR_ACQSTATUS_OFF	mbr_common.h	64;"	d
MBR_ACQSTATUS_ON	mbr_common.h	65;"	d
MBR_ACQ_MAX_ARGS	mbr_common.h	72;"	d
MBR_ARG_HELPLONG	mbr_common.h	130;"	d
MBR_ARG_HELPSHORT	mbr_common.h	131;"	d
MBR_ARG_MIN	mbr_common.h	333;"	d
MBR_ARG_VERLONG	mbr_common.h	133;"	d
MBR_ARG_VERSHORT	mbr_common.h	134;"	d
MBR_ATTN_FACTOR	mbr_common.h	208;"	d
MBR_ATTN_FRAC	mbr_common.h	204;"	d
MBR_BITPOS_ATTENLATCH	mbr_serialport.h	56;"	d
MBR_Bitmap2Int	mbr_common.cpp	/^int MBR_Bitmap2Int(const char* pcVal)$/;"	f
MBR_Bitmap2LongLong	mbr_serialport.cpp	/^long long MBR_Bitmap2LongLong(const char *pcVal)$/;"	f
MBR_CFG_DAS	mbr_common.h	362;"	d
MBR_CFG_MC	mbr_common.h	361;"	d
MBR_CHARHEIGHT_IN_PX	mbr_runterms.h	49;"	d
MBR_CLK_HIGH	mbr_serialport.h	63;"	d
MBR_CLK_LOW	mbr_serialport.h	64;"	d
MBR_CMD	mbr_common.h	405;"	d
MBR_CMDTYPE_DO	mbr_common.h	138;"	d
MBR_CMDTYPE_GET	mbr_common.h	137;"	d
MBR_CMDTYPE_SET	mbr_common.h	136;"	d
MBR_CMD_ACQDUR	mbr_common.h	263;"	d
MBR_CMD_ACQMODE	mbr_common.h	265;"	d
MBR_CMD_ACQMODE_CHECK	mbr_common.h	244;"	d
MBR_CMD_ACQMODE_OBS	mbr_common.h	243;"	d
MBR_CMD_ACQMODE_SNIFF	mbr_common.h	241;"	d
MBR_CMD_ACQMODE_SNIFFACQ	mbr_common.h	242;"	d
MBR_CMD_ACQUIRE	mbr_common.h	256;"	d
MBR_CMD_ACQUISITION	mbr_common.h	218;"	d
MBR_CMD_ATTENUATOR	mbr_common.h	221;"	d
MBR_CMD_ATTENUATOR1	mbr_common.h	222;"	d
MBR_CMD_ATTENUATOR2	mbr_common.h	223;"	d
MBR_CMD_ATTENUATOR3	mbr_common.h	224;"	d
MBR_CMD_ATTENUATOR4	mbr_common.h	225;"	d
MBR_CMD_BITPACKMODE	mbr_common.h	246;"	d
MBR_CMD_BITPACK_4	mbr_common.h	247;"	d
MBR_CMD_BITPACK_8	mbr_common.h	248;"	d
MBR_CMD_DASID	mbr_common.h	237;"	d
MBR_CMD_DATACHECK	mbr_common.h	255;"	d
MBR_CMD_DATAMODE	mbr_common.h	245;"	d
MBR_CMD_DIAG	mbr_common.h	239;"	d
MBR_CMD_DO	mbr_common.h	217;"	d
MBR_CMD_ETHDEV	mbr_common.h	266;"	d
MBR_CMD_FLUSHMSGQ	mbr_common.h	273;"	d
MBR_CMD_FPGA	mbr_common.h	238;"	d
MBR_CMD_FPGAPROG	mbr_common.h	236;"	d
MBR_CMD_FPGARESET	mbr_common.h	235;"	d
MBR_CMD_GET	mbr_common.h	216;"	d
MBR_CMD_GPS	mbr_common.h	249;"	d
MBR_CMD_HEADERINFO	mbr_common.h	258;"	d
MBR_CMD_HIF	mbr_common.h	229;"	d
MBR_CMD_HRF	mbr_common.h	228;"	d
MBR_CMD_INIT	mbr_common.h	260;"	d
MBR_CMD_LODWELL	mbr_common.h	234;"	d
MBR_CMD_LOFREQ	mbr_common.h	230;"	d
MBR_CMD_LOMAX	mbr_common.h	232;"	d
MBR_CMD_LOMIN	mbr_common.h	231;"	d
MBR_CMD_LOSTEP	mbr_common.h	233;"	d
MBR_CMD_MASTER	mbr_common.h	250;"	d
MBR_CMD_MCACQDUR	mbr_common.h	281;"	d
MBR_CMD_MCACQUIRE	mbr_common.h	282;"	d
MBR_CMD_MCD_FLUSHMSGQ	mbr_common.h	274;"	d
MBR_CMD_MCETHDEV	mbr_common.h	277;"	d
MBR_CMD_MCSOURCE	mbr_common.h	280;"	d
MBR_CMD_OBS	mbr_common.h	240;"	d
MBR_CMD_OFF	mbr_common.h	220;"	d
MBR_CMD_ON	mbr_common.h	219;"	d
MBR_CMD_PKTOFFSET	mbr_common.h	264;"	d
MBR_CMD_REBOOT	mbr_common.h	252;"	d
MBR_CMD_RESET	mbr_common.h	253;"	d
MBR_CMD_RFHIST	mbr_common.h	257;"	d
MBR_CMD_RUN	mbr_common.h	259;"	d
MBR_CMD_SAMPCLKFREQ	mbr_common.h	267;"	d
MBR_CMD_SAMPCLKFREQ_62D5	mbr_common.h	269;"	d
MBR_CMD_SAMPCLKFREQ_66	mbr_common.h	268;"	d
MBR_CMD_SET	mbr_common.h	215;"	d
MBR_CMD_SHUTDOWN	mbr_common.h	251;"	d
MBR_CMD_SOURCE	mbr_common.h	262;"	d
MBR_CMD_STOPDAS	mbr_common.h	254;"	d
MBR_CMD_TIMESTAMP	mbr_common.h	270;"	d
MBR_CMD_TIMESYNC	mbr_common.h	261;"	d
MBR_CMD_VALIDATE	mbr_config.h	25;"	d
MBR_CMD_VIF	mbr_common.h	227;"	d
MBR_CMD_VRF	mbr_common.h	226;"	d
MBR_CONFIG_READ	mbr_common.h	184;"	d
MBR_CONFIG_UPDATE	mbr_common.h	185;"	d
MBR_CONTROL	mbr_common.h	/^} MBR_CONTROL;$/;"	t	typeref:struct:tagControl
MBR_CloseTermFile	mbr_common.cpp	/^void MBR_CloseTermFile(void)$/;"	f
MBR_Command2Packet	mbr_common.cpp	/^int MBR_Command2Packet(int iDASID,$/;"	f
MBR_ConfigEntry	mbr_config.cpp	/^int MBR_ConfigEntry(int iAction,$/;"	f
MBR_CreateDeviceLookup	mbr_serialport.cpp	/^int MBR_CreateDeviceLookup(void)$/;"	f
MBR_CreateDispatchers	mbr_mcd.cpp	/^int MBR_CreateDispatchers(void)$/;"	f
MBR_DASID_MAX	mbr_common.h	335;"	d
MBR_DASID_MIN	mbr_common.h	334;"	d
MBR_DATAMODE_DIAG	mbr_common.h	187;"	d
MBR_DATAMODE_OBSV	mbr_common.h	188;"	d
MBR_DEVID_ATTENUATOR_START	mbr_common.h	76;"	d
MBR_DEVID_ATTENUATOR_STOP	mbr_common.h	77;"	d
MBR_DEV_SERIALPORT	mbr_serialport.h	24;"	d
MBR_DID_DASD	mbr_common.h	160;"	d
MBR_DID_MCD	mbr_common.h	159;"	d
MBR_DO_ABORT_ALL	mbr_common.h	69;"	d
MBR_DO_ABORT_LASTOP	mbr_common.h	68;"	d
MBR_DO_PROC_VIEW	mbr_common.h	67;"	d
MBR_Daemonise	mbr_common.cpp	/^int MBR_Daemonise(int iDaemonID)$/;"	f
MBR_DevClose	mbr_serialport.cpp	/^void MBR_DevClose()$/;"	f
MBR_DevWrite	mbr_serialport.cpp	/^int MBR_DevWrite(int iAddress, int iVal)$/;"	f
MBR_Do	mbr_do.cpp	/^int MBR_Do(int argc, char *argv[])$/;"	f
MBR_DoAcquire	mbr_do.cpp	/^int MBR_DoAcquire(void)$/;"	f
MBR_DoFPGAProg	mbr_do.cpp	/^int MBR_DoFPGAProg(void)$/;"	f
MBR_DoFPGAReset	mbr_do.cpp	/^int MBR_DoFPGAReset(const char *pcReset)$/;"	f
MBR_DoReboot	mbr_do.cpp	/^int MBR_DoReboot(void)$/;"	f
MBR_DoRun	mbr_do.cpp	/^int MBR_DoRun(int iArgC, char *apcArgV[])$/;"	f
MBR_DoShutdown	mbr_do.cpp	/^int MBR_DoShutdown(void)$/;"	f
MBR_DoSimGPS	mbr_do.cpp	/^int MBR_DoSimGPS(void)$/;"	f
MBR_DoTimeSync	mbr_do.cpp	/^int MBR_DoTimeSync(char *pcTime)$/;"	f
MBR_DoTxCheck	mbr_do.cpp	/^int MBR_DoTxCheck(void)$/;"	f
MBR_Download	mbr_serialport.cpp	/^int MBR_Download(const char *pcParam, const char *pcValue)$/;"	f
MBR_DownloadHeaderInfo	mbr_set.cpp	/^int MBR_DownloadHeaderInfo(void)$/;"	f
MBR_DownloadRFHist	mbr_set.cpp	/^int MBR_DownloadRFHist(void)$/;"	f
MBR_ENV_HOME	mbr_common.h	141;"	d
MBR_ENV_SOURCE	mbr_common.h	142;"	d
MBR_ETH_PRIMARY	mbr_common.h	165;"	d
MBR_EXE_ACQSNIFF	mbr_common.h	329;"	d
MBR_EXE_ACQUIRE	mbr_common.h	323;"	d
MBR_EXE_DATE	mbr_common.h	330;"	d
MBR_EXE_DISPLAY	mbr_get.h	18;"	d
MBR_EXE_REBOOT	mbr_common.h	322;"	d
MBR_EXE_SHUTDOWN	mbr_common.h	321;"	d
MBR_EXE_XTERM	mbr_runterms.h	57;"	d
MBR_FALSE	mbr_common.h	56;"	d
MBR_FC_ACQ_OFF	mbr_common.h	/^    MBR_FC_ACQ_OFF = 0x46,          \/* pull ENABLE high *\/$/;"	e	enum:tagFPGACmd
MBR_FC_ACQ_ON	mbr_common.h	/^    MBR_FC_ACQ_ON = 0x45,           \/* pull ENABLE low *\/$/;"	e	enum:tagFPGACmd
MBR_FC_BITPACKMODE_4	mbr_common.h	/^    MBR_FC_BITPACKMODE_4 = 0x43,$/;"	e	enum:tagFPGACmd
MBR_FC_BITPACKMODE_8	mbr_common.h	/^    MBR_FC_BITPACKMODE_8 = 0x44,$/;"	e	enum:tagFPGACmd
MBR_FC_DATAMODE_DIAG	mbr_common.h	/^    MBR_FC_DATAMODE_DIAG = 0x41,$/;"	e	enum:tagFPGACmd
MBR_FC_DATAMODE_OBS	mbr_common.h	/^    MBR_FC_DATAMODE_OBS = 0x42,$/;"	e	enum:tagFPGACmd
MBR_FC_GPS_HIGH	mbr_common.h	/^    MBR_FC_GPS_HIGH = 0x47,$/;"	e	enum:tagFPGACmd
MBR_FC_GPS_LOW	mbr_common.h	/^    MBR_FC_GPS_LOW = 0x48,$/;"	e	enum:tagFPGACmd
MBR_FC_HEADERINFO_HIGH	mbr_common.h	/^    MBR_FC_HEADERINFO_HIGH = 0x53,$/;"	e	enum:tagFPGACmd
MBR_FC_HEADERINFO_LOW	mbr_common.h	/^    MBR_FC_HEADERINFO_LOW = 0x54,$/;"	e	enum:tagFPGACmd
MBR_FC_RFINFO_HIGH	mbr_common.h	/^    MBR_FC_RFINFO_HIGH = 0x51,$/;"	e	enum:tagFPGACmd
MBR_FC_RFINFO_LOW	mbr_common.h	/^    MBR_FC_RFINFO_LOW = 0x52,$/;"	e	enum:tagFPGACmd
MBR_FC_TIMESTAMP_HIGH	mbr_common.h	/^    MBR_FC_TIMESTAMP_HIGH = 0x49,$/;"	e	enum:tagFPGACmd
MBR_FC_TIMESTAMP_LOW	mbr_common.h	/^    MBR_FC_TIMESTAMP_LOW = 0x50,$/;"	e	enum:tagFPGACmd
MBR_FILE_DAS_BITMAP	mbr_serialport.h	59;"	d
MBR_FILE_DAS_LOOKUP	mbr_serialport.h	60;"	d
MBR_FILE_VERSRC	mbr_makever.cpp	14;"	d	file:
MBR_FPGABIT_ENABLE	mbr_common.h	210;"	d
MBR_FPGACMD	mbr_common.h	/^} MBR_FPGACMD;$/;"	t	typeref:enum:tagFPGACmd
MBR_FormCommand	mbr_command.cpp	/^int MBR_FormCommand(char *apcOutArgv[], char *apcInArgv[], int iArgc)$/;"	f
MBR_FormatDASID	mbr_runterms.cpp	/^void MBR_FormatDASID(int iCount, char acCount[])$/;"	f
MBR_Freq2AB	mbr_serialport.cpp	/^int MBR_Freq2AB(const char *pcValue)$/;"	f
MBR_FreqSynthInit	mbr_serialport.cpp	/^int MBR_FreqSynthInit(int iStartBit, int iStopBit)$/;"	f
MBR_GID_DAS	mbr_common.h	128;"	d
MBR_Get	mbr_get.cpp	/^int MBR_Get(char *argv[])$/;"	f
MBR_GetAcqDur	mbr_get.cpp	/^int MBR_GetAcqDur(void)$/;"	f
MBR_GetAcqMode	mbr_get.cpp	/^int MBR_GetAcqMode(void)$/;"	f
MBR_GetAcqStatus	mbr_get.cpp	/^int MBR_GetAcqStatus(void)$/;"	f
MBR_GetAttenuator	mbr_get.cpp	/^int MBR_GetAttenuator(const char *pcID)$/;"	f
MBR_GetAttnFromBitmap	mbr_serialport.cpp	/^float MBR_GetAttnFromBitmap(const char* pcVal)$/;"	f
MBR_GetAttribute	mbr_config.cpp	/^int MBR_GetAttribute(xmlDocPtr pstDoc,$/;"	f
MBR_GetBitpackMode	mbr_get.cpp	/^int MBR_GetBitpackMode(void)$/;"	f
MBR_GetBits	mbr_serialport.cpp	/^int MBR_GetBits(char *pcDevice, char *pcBits)$/;"	f
MBR_GetDASID	mbr_get.cpp	/^int MBR_GetDASID(void)$/;"	f
MBR_GetDataMode	mbr_get.cpp	/^int MBR_GetDataMode(void)$/;"	f
MBR_GetEthDev	mbr_get.cpp	/^int MBR_GetEthDev(void)$/;"	f
MBR_GetHelp	mbr_get.cpp	/^int MBR_GetHelp(void)$/;"	f
MBR_GetLODwell	mbr_get.cpp	/^int MBR_GetLODwell(void)$/;"	f
MBR_GetLOFreq	mbr_get.cpp	/^int MBR_GetLOFreq(void)$/;"	f
MBR_GetLOMax	mbr_get.cpp	/^int MBR_GetLOMax(void)$/;"	f
MBR_GetLOMin	mbr_get.cpp	/^int MBR_GetLOMin(void)$/;"	f
MBR_GetLOStep	mbr_get.cpp	/^int MBR_GetLOStep(void)$/;"	f
MBR_GetLastRFHistEntry	mbr_common.cpp	/^int MBR_GetLastRFHistEntry(char *pcEntry)$/;"	f
MBR_GetPktOffset	mbr_get.cpp	/^int MBR_GetPktOffset(void)$/;"	f
MBR_GetSampClkFreq	mbr_get.cpp	/^int MBR_GetSampClkFreq(void)$/;"	f
MBR_GetSource	mbr_get.cpp	/^int MBR_GetSource(void)$/;"	f
MBR_GetTimestamp	mbr_common.cpp	/^char* MBR_GetTimestamp(void)$/;"	f
MBR_HandleSIGCHLD	mbr_dasd.cpp	/^void MBR_HandleSIGCHLD(int iSigNo)$/;"	f
MBR_HandleSIGCHLD	mbr_mcd.cpp	/^void MBR_HandleSIGCHLD(int iSigNo)$/;"	f
MBR_HandleStopSignals	mbr_command.cpp	/^void MBR_HandleStopSignals(int iSigNo)$/;"	f
MBR_HandleStopSignals	mbr_dasd.cpp	/^void MBR_HandleStopSignals(int iSigNo)$/;"	f
MBR_HandleStopSignals	mbr_mcd.cpp	/^void MBR_HandleStopSignals(int iSigNo)$/;"	f
MBR_ID_DEFAULTSERVER	mbr_common.h	173;"	d
MBR_ID_MCDPARSER	mbr_common.h	172;"	d
MBR_IP_DSP	mbr_common.h	122;"	d
MBR_Int2Bitmap	mbr_common.cpp	/^void MBR_Int2Bitmap(int iNum, char acBitmap[])$/;"	f
MBR_IsInteger	mbr_common.cpp	/^bool MBR_IsInteger(float fNum)$/;"	f
MBR_LEN_BACKLOGQUEUE	mbr_common.h	99;"	d
MBR_LEN_COUNT	mbr_runterms.h	51;"	d
MBR_LEN_EXECVPARRAY	mbr_runterms.h	53;"	d
MBR_LEN_TIMESTAMP	mbr_common.h	102;"	d
MBR_LE_HIGH	mbr_serialport.h	65;"	d
MBR_LE_LOW	mbr_serialport.h	66;"	d
MBR_LongLong2Bitmap	mbr_serialport.cpp	/^void MBR_LongLong2Bitmap(long long llnum, char acBitmap[])$/;"	f
MBR_LookUp	mbr_serialport.h	/^} MBR_LookUp;$/;"	t	typeref:struct:DeviceLookUp
MBR_LookupHostName	mbr_common.cpp	/^int MBR_LookupHostName(int iDASID, char *pcHostName)$/;"	f
MBR_MASK_ATTNFRAC	mbr_common.h	201;"	d
MBR_MAX_ATTENUATION	mbr_common.h	80;"	d
MBR_MAX_DAS	mbr_common.h	125;"	d
MBR_MAX_DAS	mbr_runterms.h	55;"	d
MBR_MAX_DEV_ATTENUATORS	mbr_common.h	75;"	d
MBR_MAX_LEN_ARG	mbr_common.h	94;"	d
MBR_MAX_LEN_GENSTRING	mbr_common.h	97;"	d
MBR_MAX_NUM_ARGS	mbr_common.h	93;"	d
MBR_MAX_NUM_DEVICES	mbr_common.h	212;"	d
MBR_MAX_SIZE_PACKET	mbr_common.h	91;"	d
MBR_MSG	mbr_common.h	/^} MBR_MSG;$/;"	t	typeref:struct:tagMsg
MBR_MSGQH_CMD	mbr_common.h	347;"	d
MBR_MSGQH_MASK	mbr_common.h	350;"	d
MBR_MSGQH_RET_INFO	mbr_common.h	348;"	d
MBR_MSGQ_TIMEOUT	mbr_common.h	357;"	d
MBR_MSGQ_TIMEOUT_FLUSH	mbr_common.h	358;"	d
MBR_MSGTYPE_CMD	mbr_common.h	352;"	d
MBR_MSGTYPE_RET_INFO	mbr_common.h	353;"	d
MBR_MSG_DEF_TYPE	mbr_common.h	176;"	d
MBR_NODE_ROOT_DAS	mbr_config.h	21;"	d
MBR_NODE_ROOT_MC	mbr_config.h	22;"	d
MBR_NODE_TEXT	mbr_config.h	20;"	d
MBR_NUM_BIT	mbr_serialport.h	26;"	d
MBR_NUM_BITS_ATTENUATOR	mbr_serialport.h	73;"	d
MBR_NUM_BITS_LOFREQ	mbr_serialport.h	74;"	d
MBR_NUM_COL	mbr_runterms.h	16;"	d
MBR_NUM_ROW	mbr_runterms.h	15;"	d
MBR_OpenErrLog	mbr_common.cpp	/^int MBR_OpenErrLog(bool bDASOwned)$/;"	f
MBR_OpenTermFile	mbr_common.cpp	/^int MBR_OpenTermFile(void)$/;"	f
MBR_PACKET	mbr_common.h	/^} MBR_PACKET;$/;"	t	typeref:struct:tagPacket
MBR_PATH_BIN	mbr_common.h	146;"	d
MBR_PATH_DASMAP	mbr_common.h	145;"	d
MBR_PATH_ERRORLOG	mbr_common.h	147;"	d
MBR_PATH_HELPFILE	mbr_common.h	150;"	d
MBR_PATH_MSGQKEYFILE	mbr_common.h	143;"	d
MBR_PATH_PIDFILEDIR	mbr_common.h	144;"	d
MBR_PATH_RFHIST	mbr_common.h	149;"	d
MBR_PATH_TERMDISP	mbr_runterms.h	59;"	d
MBR_PATH_TERMFILE	mbr_common.h	148;"	d
MBR_PATH_VER	mbr_makever.cpp	13;"	d	file:
MBR_PATH_XML_DAS	mbr_config.h	23;"	d
MBR_PATH_XML_MC	mbr_config.h	24;"	d
MBR_PIDFNAME_DASD	mbr_common.h	162;"	d
MBR_PIDFNAME_MCD	mbr_common.h	161;"	d
MBR_PORT_DAS	mbr_common.h	115;"	d
MBR_PORT_DSP	mbr_common.h	119;"	d
MBR_PORT_DST_RAWDATA	mbr_common.h	117;"	d
MBR_PORT_DST_SNIFFDATA	mbr_common.h	118;"	d
MBR_PORT_MCDPARSER	mbr_common.h	113;"	d
MBR_PORT_SRC_RAWDATA	mbr_common.h	116;"	d
MBR_PORT_USEMAX	mbr_common.h	112;"	d
MBR_PORT_USEMIN	mbr_common.h	111;"	d
MBR_POS_ETH_ID	mbr_common.h	196;"	d
MBR_PREFIX_ETHDEV	mbr_common.h	195;"	d
MBR_Packet2Command	mbr_common.cpp	/^int MBR_Packet2Command(MBR_PACKET stCommand, int *piArgc, char *apcArgv[])$/;"	f
MBR_ParseDoc	mbr_config.cpp	/^int MBR_ParseDoc(const char *pcConfigFile,$/;"	f
MBR_PrintUsage	mbr_command.cpp	/^void MBR_PrintUsage(int iCmdType)$/;"	f
MBR_PrintUsage	mbr_dasd.cpp	/^void MBR_PrintUsage(const char *pcProgName)$/;"	f
MBR_PrintUsage	mbr_livedas.cpp	/^void MBR_PrintUsage(const char *pcProgName)$/;"	f
MBR_PrintUsage	mbr_mcd.cpp	/^void MBR_PrintUsage(const char *pcProgName)$/;"	f
MBR_PrintUsage	mbr_runterms.cpp	/^void MBR_PrintUsage(const char *pcProgName)$/;"	f
MBR_ProcessCommand	mbr_dasd.cpp	/^MBR_RET_INFO MBR_ProcessCommand(int argc, char *argv[])$/;"	f
MBR_RETSTRING_DASDOWN	mbr_common.h	170;"	d
MBR_RETSTRING_ERROR	mbr_common.h	167;"	d
MBR_RETSTRING_INVALIDCMD	mbr_common.h	168;"	d
MBR_RETSTRING_TIMEOUT	mbr_common.h	169;"	d
MBR_RET_CLEANUP	mbr_common.h	53;"	d
MBR_RET_ENTRYNOTFOUND	mbr_common.h	51;"	d
MBR_RET_ERROR	mbr_common.h	48;"	d
MBR_RET_ERROR_SYS	mbr_common.h	49;"	d
MBR_RET_INFO	mbr_common.h	406;"	d
MBR_RET_PEERSHUTDOWN	mbr_common.h	50;"	d
MBR_RET_SUCCESS	mbr_common.h	47;"	d
MBR_RET_WARNING	mbr_common.h	52;"	d
MBR_RFHIST_ATTEN1	mbr_common.h	84;"	d
MBR_RFHIST_ATTEN2	mbr_common.h	85;"	d
MBR_RFHIST_ATTEN3	mbr_common.h	86;"	d
MBR_RFHIST_ATTEN4	mbr_common.h	87;"	d
MBR_RFHIST_LOFREQ	mbr_common.h	88;"	d
MBR_RFHIST_NUM_FIELDS	mbr_common.h	83;"	d
MBR_RUN_LOCAL	mbr_common.h	338;"	d
MBR_RUN_MODE	mbr_common.h	345;"	d
MBR_RUN_NETWORK	mbr_common.h	341;"	d
MBR_RunAcquire	mbr_mcd.cpp	/^int MBR_RunAcquire(void)$/;"	f
MBR_SEC_IN_12_HOURS	mbr_common.h	105;"	d
MBR_SHELL	mbr_common.h	153;"	d
MBR_SHELL_OPT	mbr_common.h	156;"	d
MBR_SIZE_16_9_CL_X	mbr_runterms.h	39;"	d
MBR_SIZE_16_9_CL_Y	mbr_runterms.h	40;"	d
MBR_SIZE_16_9_MON_X	mbr_runterms.h	35;"	d
MBR_SIZE_16_9_MON_Y	mbr_runterms.h	36;"	d
MBR_SIZE_16_9_X	mbr_runterms.h	31;"	d
MBR_SIZE_16_9_Y	mbr_runterms.h	32;"	d
MBR_SIZE_4_3_CL_X	mbr_runterms.h	27;"	d
MBR_SIZE_4_3_CL_Y	mbr_runterms.h	28;"	d
MBR_SIZE_4_3_MON_X	mbr_runterms.h	23;"	d
MBR_SIZE_4_3_MON_Y	mbr_runterms.h	24;"	d
MBR_SIZE_4_3_X	mbr_runterms.h	19;"	d
MBR_SIZE_4_3_Y	mbr_runterms.h	20;"	d
MBR_SIZE_HEADERINFO	mbr_common.h	365;"	d
MBR_SIZE_WRITE	mbr_serialport.h	25;"	d
MBR_SOCKTYPE_CLIENT	mbr_common.h	61;"	d
MBR_SOCKTYPE_SERVER	mbr_common.h	60;"	d
MBR_STATUS_OFF	mbr_common.h	181;"	d
MBR_STATUS_ON	mbr_common.h	180;"	d
MBR_STRING_LOCAL	mbr_common.h	178;"	d
MBR_SerialPortInit	mbr_serialport.cpp	/^int MBR_SerialPortInit(void)$/;"	f
MBR_Set	mbr_set.cpp	/^int MBR_Set(char *argv[])$/;"	f
MBR_SetAcq	mbr_set.cpp	/^int MBR_SetAcq(const char *pcStatus)$/;"	f
MBR_SetAcqDur	mbr_set.cpp	/^int MBR_SetAcqDur(const char *pcDuration)$/;"	f
MBR_SetAcqMode	mbr_set.cpp	/^int MBR_SetAcqMode(const char *pcAcqMode)$/;"	f
MBR_SetAttenuator	mbr_set.cpp	/^int MBR_SetAttenuator(const char *pcID, const char *pcValue)$/;"	f
MBR_SetAttenuatorLastConf	mbr_set.cpp	/^int MBR_SetAttenuatorLastConf(void)$/;"	f
MBR_SetBitpackMode	mbr_set.cpp	/^int MBR_SetBitpackMode(const char *pcBitpackMode)$/;"	f
MBR_SetBits	mbr_serialport.cpp	/^int MBR_SetBits(int iStartBit, int iStopBit, int iValue, long long *pllBitmap)$/;"	f
MBR_SetDASID	mbr_set.cpp	/^int MBR_SetDASID(const char *pcDASID)$/;"	f
MBR_SetDataMode	mbr_set.cpp	/^int MBR_SetDataMode(const char *pcDataMode)$/;"	f
MBR_SetEthDev	mbr_set.cpp	/^int MBR_SetEthDev(const char *pcEthDev)$/;"	f
MBR_SetLODwell	mbr_set.cpp	/^int MBR_SetLODwell(const char *pcTime)$/;"	f
MBR_SetLOFreq	mbr_set.cpp	/^int MBR_SetLOFreq(const char *pcFreq)$/;"	f
MBR_SetLOFreqLastConf	mbr_set.cpp	/^int MBR_SetLOFreqLastConf(void)$/;"	f
MBR_SetLOMax	mbr_set.cpp	/^int MBR_SetLOMax(const char *pcFreq)$/;"	f
MBR_SetLOMin	mbr_set.cpp	/^int MBR_SetLOMin(const char *pcFreq)$/;"	f
MBR_SetLOStep	mbr_set.cpp	/^int MBR_SetLOStep(const char *pcFreq)$/;"	f
MBR_SetPktOffset	mbr_set.cpp	/^int MBR_SetPktOffset(const char *pcOffset)$/;"	f
MBR_SetRFHist	mbr_set.cpp	/^int MBR_SetRFHist(void)$/;"	f
MBR_SetSampClkFreq	mbr_set.cpp	/^int MBR_SetSampClkFreq(const char *pcFreq)$/;"	f
MBR_SetSource	mbr_set.cpp	/^int MBR_SetSource(const char *pcSource)$/;"	f
MBR_SetTimestamp	mbr_set.cpp	/^int MBR_SetTimestamp(void)$/;"	f
MBR_SysLog	mbr_common.h	369;"	d
MBR_TRUE	mbr_common.h	57;"	d
MBR_UID_DAS	mbr_common.h	127;"	d
MBR_UpdateAcqDur	mbr_mcd.cpp	/^int MBR_UpdateAcqDur(char *pcAcqDur)$/;"	f
MBR_UpdateEthDev	mbr_mcd.cpp	/^int MBR_UpdateEthDev(char *pcEthDev)$/;"	f
MBR_UpdateRFHist	mbr_set.cpp	/^int MBR_UpdateRFHist(void)$/;"	f
MBR_UpdateSourceName	mbr_mcd.cpp	/^int MBR_UpdateSourceName(char *pcSource)$/;"	f
MBR_VAR_VER	mbr_makever.cpp	15;"	d	file:
MBR_VER_BUILD_DELIM	mbr_makever.cpp	16;"	d	file:
MBR_ValidateAttenuatorSetting	mbr_set.cpp	/^int MBR_ValidateAttenuatorSetting(char *pcID, char *pcValue)$/;"	f
MBR_WriteBitmap	mbr_serialport.cpp	/^int MBR_WriteBitmap(long long llBitmap)$/;"	f
MBR_XML_ATT_ACQMODE	mbr_common.h	312;"	d
MBR_XML_ATT_BITPACKMODE	mbr_common.h	313;"	d
MBR_XML_ATT_DATAMODE	mbr_common.h	303;"	d
MBR_XML_ATT_DEVICE	mbr_common.h	305;"	d
MBR_XML_ATT_DURATION	mbr_common.h	302;"	d
MBR_XML_ATT_DWELL	mbr_common.h	310;"	d
MBR_XML_ATT_FREQ	mbr_common.h	306;"	d
MBR_XML_ATT_ID	mbr_common.h	298;"	d
MBR_XML_ATT_LIVE	mbr_common.h	299;"	d
MBR_XML_ATT_MAX	mbr_common.h	308;"	d
MBR_XML_ATT_MIN	mbr_common.h	307;"	d
MBR_XML_ATT_NAME	mbr_common.h	300;"	d
MBR_XML_ATT_NODEID	mbr_common.h	315;"	d
MBR_XML_ATT_OFFSET	mbr_common.h	304;"	d
MBR_XML_ATT_SAMPCLKFREQ	mbr_common.h	314;"	d
MBR_XML_ATT_STATUS	mbr_common.h	301;"	d
MBR_XML_ATT_STEP	mbr_common.h	309;"	d
MBR_XML_ATT_VALUE	mbr_common.h	311;"	d
MBR_XML_ENT_ACQUISITION	mbr_common.h	286;"	d
MBR_XML_ENT_ATTENUATOR	mbr_common.h	288;"	d
MBR_XML_ENT_ATTENUATOR1	mbr_common.h	289;"	d
MBR_XML_ENT_ATTENUATOR2	mbr_common.h	290;"	d
MBR_XML_ENT_ATTENUATOR3	mbr_common.h	291;"	d
MBR_XML_ENT_ATTENUATOR4	mbr_common.h	292;"	d
MBR_XML_ENT_DAS	mbr_common.h	295;"	d
MBR_XML_ENT_FPGA	mbr_common.h	293;"	d
MBR_XML_ENT_LO	mbr_common.h	287;"	d
MBR_XML_ENT_MASTER	mbr_common.h	294;"	d
MBR_XML_ENT_SOURCE	mbr_common.h	285;"	d
MBR_XML_LIVE_NO	mbr_common.h	318;"	d
MBR_XML_LIVE_YES	mbr_common.h	317;"	d
P	mbr_serialport.h	77;"	d
Pop	mbr_common.cpp	/^MBR_MSG* CMsgQ::Pop(int iMsgType, bool bIsFlushing)$/;"	f	class:CMsgQ
Push	mbr_common.cpp	/^int CMsgQ::Push(MBR_MSG stMsg)$/;"	f	class:CMsgQ
R	mbr_serialport.h	69;"	d
Receive	mbr_common.cpp	/^int CSocket::Receive(MBR_PACKET *pstPacket)$/;"	f	class:CSocket
RetInfo_acRet	mbr_common.h	402;"	d
RetInfo_iRet	mbr_common.h	399;"	d
Send	mbr_common.cpp	/^int CSocket::Send(MBR_CONTROL stControl)$/;"	f	class:CSocket
Send	mbr_common.cpp	/^int CSocket::Send(MBR_PACKET stPacket)$/;"	f	class:CSocket
UpdateConfigFile	mbr_config.cpp	/^int UpdateConfigFile(const char *pcConfigFile,$/;"	f
__MBR_COMMAND_H__	mbr_command.h	14;"	d
__MBR_COMMON_H__	mbr_common.h	14;"	d
__MBR_CONFIG_H__	mbr_config.h	14;"	d
__MBR_DAS_H__	mbr_dasd.h	14;"	d
__MBR_DO_H__	mbr_do.h	15;"	d
__MBR_GET_H__	mbr_get.h	14;"	d
__MBR_MCD_H__	mbr_mcd.h	14;"	d
__MBR_RUNTERMS_H__	mbr_runterms.h	13;"	d
__MBR_SERIALPORT_H__	mbr_serialport.h	16;"	d
__MBR_SET_H__	mbr_set.h	15;"	d
acDevice	mbr_serialport.h	/^    char acDevice[MBR_MAX_LEN_GENSTRING];$/;"	m	struct:DeviceLookUp
acString	mbr_common.h	/^    char acString[MBR_MAX_LEN_GENSTRING];$/;"	m	struct:tagPacket
g_DeviceLookUp	mbr_serialport.cpp	/^MBR_LookUp g_DeviceLookUp[MBR_MAX_NUM_DEVICES] = {{{0}}};$/;"	v
g_ErrLog	mbr_common.cpp	/^fstream g_ErrLog;                               \/* the error log file *\/$/;"	v
g_abIsDASLive	mbr_command.cpp	/^bool g_abIsDASLive[MBR_MAX_DAS+1] = {false};$/;"	v
g_abIsDASLive	mbr_mcd.cpp	/^bool g_abIsDASLive[MBR_MAX_DAS+1] = {false};$/;"	v
g_acTimestamp	mbr_common.cpp	/^char g_acTimestamp[MBR_LEN_TIMESTAMP+1] = {0};  \/* the global timestamp string$/;"	v
g_apMsgQCmd	mbr_mcd.cpp	/^CMsgQ *g_apMsgQCmd[MBR_MAX_DAS+1] = {NULL};$/;"	v
g_apMsgQRetInfo	mbr_mcd.cpp	/^CMsgQ *g_apMsgQRetInfo[MBR_MAX_DAS+1] = {NULL};$/;"	v
g_bDaemon	mbr_dasd.cpp	/^bool g_bDaemon = true;$/;"	v
g_bDaemon	mbr_mcd.cpp	/^bool g_bDaemon = true;$/;"	v
g_iDispatcherID	mbr_mcd.cpp	/^int g_iDispatcherID = 0;$/;"	v
g_iFlagRun	mbr_dasd.cpp	/^int g_iFlagRun = MBR_RUN_MODE;$/;"	v
g_iNumDevice	mbr_serialport.cpp	/^int g_iNumDevice = 0;$/;"	v
g_iParentPID	mbr_mcd.cpp	/^int g_iParentPID = 0;$/;"	v
g_iSerialPort	mbr_serialport.cpp	/^int g_iSerialPort = 0;$/;"	v
g_iTermFile	mbr_common.cpp	/^int g_iTermFile = 0;$/;"	v
g_pNewSocket	mbr_dasd.cpp	/^CSocket *g_pNewSocket = NULL;$/;"	v
g_pNewSocketParser	mbr_mcd.cpp	/^CSocket *g_pNewSocketParser = NULL;$/;"	v
g_pSocket	mbr_command.cpp	/^CSocket *g_pSocket = NULL;$/;"	v
g_pSocket	mbr_dasd.cpp	/^CSocket *g_pSocket = NULL;$/;"	v
g_pSocketDispatcher	mbr_mcd.cpp	/^CSocket *g_pSocketDispatcher = NULL;$/;"	v
g_pSocketParser	mbr_mcd.cpp	/^CSocket *g_pSocketParser = NULL;$/;"	v
g_pcVersion	mbr_version.cpp	/^const char *g_pcVersion = "SOCKET2-E-NEWCON-REL-20090429-005522";$/;"	v
iCmd	mbr_common.h	/^    int iCmd;   \/* usually contains control packet ID, but may also contain$/;"	m	struct:tagControl
iCmd2	mbr_common.h	/^    int iCmd2;  \/* used if the 4 bytes provided by iCmd is not sufficient *\/$/;"	m	struct:tagControl
iCmd3	mbr_common.h	/^    int iCmd3;  \/* used if the 8 bytes provided by iCmd and iCmd2 together, is$/;"	m	struct:tagControl
iInt	mbr_common.h	/^    int iInt;$/;"	m	struct:tagPacket
iStart	mbr_serialport.h	/^    int iStart;$/;"	m	struct:DeviceLookUp
iStop	mbr_serialport.h	/^    int iStop;$/;"	m	struct:DeviceLookUp
lMsgType	mbr_common.h	/^    long lMsgType;$/;"	m	struct:tagMsg
m_iMsgQHandle	mbr_common.h	/^    int m_iMsgQHandle;$/;"	m	class:CMsgQ
m_iMsgQID	mbr_common.h	/^    int m_iMsgQID;$/;"	m	class:CMsgQ
m_iSocketFD	mbr_common.h	/^    int m_iSocketFD;$/;"	m	class:CSocket
m_stSocketAddr	mbr_common.h	/^    struct sockaddr_in m_stSocketAddr;$/;"	m	class:CSocket	typeref:struct:CSocket::sockaddr_in
main	mbr_command.cpp	/^int main(int argc, char* argv[])$/;"	f
main	mbr_dasd.cpp	/^int main(int argc, char* argv[])$/;"	f
main	mbr_livedas.cpp	/^int main(int argc, char *argv[])$/;"	f
main	mbr_makever.cpp	/^int main(int argc, char *argv[])$/;"	f
main	mbr_mcd.cpp	/^int main(int argc, char* argv[])$/;"	f
main	mbr_runterms.cpp	/^int main(int argc, char *argv[])$/;"	f
stPacket	mbr_common.h	/^    MBR_PACKET stPacket;$/;"	m	struct:tagMsg
tagControl	mbr_common.h	/^typedef struct tagControl$/;"	s
tagFPGACmd	mbr_common.h	/^typedef enum tagFPGACmd$/;"	g
tagMsg	mbr_common.h	/^typedef struct tagMsg$/;"	s
tagPacket	mbr_common.h	/^typedef struct tagPacket$/;"	s
~CMsgQ	mbr_common.cpp	/^CMsgQ::~CMsgQ()$/;"	f	class:CMsgQ
~CSocket	mbr_common.cpp	/^CSocket::~CSocket()$/;"	f	class:CSocket
